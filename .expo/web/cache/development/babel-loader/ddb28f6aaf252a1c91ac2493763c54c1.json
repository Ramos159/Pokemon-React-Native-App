{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Edwin/Development/mobile/Pokemon-React-Native-App/src/Profile/authFormScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input, Icon, Button } from 'react-native-elements';\nimport InformationModal from \"../Components/informationModal\";\nimport usePrevious from \"../CustomHooks/usePrevious\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  formContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 300,\n    zIndex: -10\n  },\n  button: {\n    width: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    alignSelf: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 20\n  }\n});\nexport default function AuthFormScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      login = _useState8[0],\n      setLogin = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalVisible = _useState12[0],\n      setModalVisible = _useState12[1];\n\n  var prevLogin = usePrevious(login);\n  useEffect(function () {\n    if (loading && login) {\n      setTimeout(function () {\n        navigation.push('Profile', {\n          user: {\n            username: username,\n            password: password,\n            userID: 1\n          }\n        });\n        setLoading(false);\n      }, 3000);\n    }\n\n    if (loading && !login) {\n      setTimeout(function () {\n        navigation.push('Profile', {\n          user: {\n            username: username,\n            password: password,\n            userID: 1,\n            email: email\n          }\n        });\n        setLoading(false);\n      }, 3000);\n    }\n  }, [loading]);\n\n  function loginOrRegister() {\n    var loginForm = React.createElement(React.Fragment, null, React.createElement(Input, {\n      placeholder: \"Username\",\n      onChange: function onChange(event) {\n        return setUsername(event.nativeEvent.text);\n      },\n      leftIcon: React.createElement(Icon, {\n        name: \"user\",\n        type: \"feather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChange: function onChange(event) {\n        return setPassword(event.nativeEvent.text);\n      },\n      leftIcon: React.createElement(Icon, {\n        name: \"lock\",\n        type: \"feather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      }\n    }));\n    var registerForm = React.createElement(React.Fragment, null, React.createElement(Input, {\n      placeholder: \"Username\",\n      onChange: function onChange(event) {\n        return setUsername(event.nativeEvent.text);\n      },\n      leftIcon: React.createElement(Icon, {\n        name: \"user\",\n        type: \"feather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChange: function onChange(event) {\n        return setPassword(event.nativeEvent.text);\n      },\n      leftIcon: React.createElement(Icon, {\n        name: \"lock\",\n        type: \"feather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Email\",\n      onChange: function onChange(event) {\n        return setEmail(event.nativeEvent.text);\n      },\n      leftIcon: React.createElement(Icon, {\n        name: \"mail\",\n        type: \"feather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      }\n    }));\n    return login ? loginForm : registerForm;\n  }\n\n  function handleButtonTitle() {\n    return login ? 'Log in' : 'Register';\n  }\n\n  function handleFormChange() {\n    setLogin(!prevLogin);\n  }\n\n  function handleChangeFormText() {\n    return login ? 'New User? Register here!' : 'Have an Account? Log in here!';\n  }\n\n  function handleLogin() {\n    if (username !== 'edwin') {\n      alert('wrong username');\n      return null;\n    }\n\n    if (password !== 'ramos') {\n      alert('wrong password');\n      return null;\n    }\n\n    setLoading(true);\n    return null;\n  }\n\n  function handleRegister() {\n    if (username === 'edwin') {\n      alert('username is already taken');\n      return null;\n    }\n\n    if (email === 'edwinramos269@gmail.com') {\n      alert('email is already taken!');\n      return null;\n    }\n\n    setLoading(true);\n    return null;\n  }\n\n  function verifyCorrectFormFields() {\n    if (username === '') {\n      alert('Username can not be empty!');\n      return null;\n    }\n\n    if (password === '') {\n      alert('Password can not be empty');\n      return null;\n    }\n\n    if (!login) {\n      if (email === '') {\n        alert('Email can not be empty');\n        return null;\n      }\n    }\n\n    return login ? handleLogin() : handleRegister();\n  }\n\n  function renderAuthForm() {\n    return React.createElement(View, {\n      style: styles.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      }\n    }, React.createElement(Text, {\n      style: styles.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      }\n    }, login ? 'Login' : 'Register'), loginOrRegister(), React.createElement(Button, {\n      onPress: verifyCorrectFormFields,\n      style: styles.button,\n      title: handleButtonTitle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      }\n    }), React.createElement(Text, {\n      onPress: handleFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      }\n    }, handleChangeFormText()));\n  }\n\n  function handleSettingsPress() {\n    setModalVisible(true);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    }\n  }, React.createElement(InformationModal, {\n    visible: modalVisible,\n    changeVisibility: setModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      position: 'absolute',\n      left: 130\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    }\n  }, React.createElement(Icon, {\n    name: \"info\",\n    type: \"feather\",\n    onPress: handleSettingsPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    }\n  }))), loading ? React.createElement(ActivityIndicator, {\n    style: styles.formContainer,\n    size: \"large\",\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    }\n  }) : renderAuthForm());\n}","map":{"version":3,"sources":["/Users/Edwin/Development/mobile/Pokemon-React-Native-App/src/Profile/authFormScreen.tsx"],"names":["React","useState","useEffect","Input","Icon","Button","InformationModal","usePrevious","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","flexDirection","justifyContent","formContainer","width","zIndex","button","paddingTop","paddingBottom","alignSelf","headerText","fontWeight","fontSize","AuthFormScreen","navigation","username","setUsername","password","setPassword","email","setEmail","login","setLogin","loading","setLoading","modalVisible","setModalVisible","prevLogin","setTimeout","push","user","userID","loginOrRegister","loginForm","event","nativeEvent","text","registerForm","handleButtonTitle","handleFormChange","handleChangeFormText","handleLogin","alert","handleRegister","verifyCorrectFormFields","renderAuthForm","handleSettingsPress","position","left"],"mappings":"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","sourcesContent":["/* eslint-disable no-alert */\nimport React, { useState, useEffect, ReactElement } from 'react';\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  ActivityIndicator,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n} from 'react-native';\nimport {\n  Input,\n  Icon,\n  Button,\n} from 'react-native-elements';\nimport { CompositeNavigationProp } from '@react-navigation/native';\nimport { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProfileStackParamList } from '../customTypes/profileStackParamList';\nimport { RootTabParamList } from '../customTypes/rootTabParamlist';\nimport InformationModal from '../Components/informationModal';\nimport usePrevious from '../CustomHooks/usePrevious';\n\n// we use compositenavprop to combine both props type\ntype AuthFormScreenNavigationProp = CompositeNavigationProp<\nBottomTabNavigationProp<RootTabParamList, 'Profile'>,\nStackNavigationProp<ProfileStackParamList, 'AuthForm'>\n>;\n\n// this combines the bottomtabnav and stacknav props for type checking\ntype Props = {\n    navigation: AuthFormScreenNavigationProp\n};\n\n//  stylesheet\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  formContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 300,\n    zIndex: -10,\n  },\n  button: {\n    width: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    alignSelf: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n});\n\n// maybe we dont need this state type with hooks?\n\n// type State = {\n//     username: string;\n//     password: string;\n//     email: string;\n//     login: boolean;\n//     loading: boolean;\n//     modalVisible: boolean;\n// }\n\nexport default function AuthFormScreen({ navigation }:Props): ReactElement {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [login, setLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const prevLogin = usePrevious(login);\n  // if loading gets set to true use this effect\n  useEffect(() => {\n    if (loading && login) {\n      setTimeout(() => {\n        navigation.push('Profile', {\n          // mimic user object\n          user: {\n            username,\n            password,\n            userID: 1,\n          },\n        });\n        setLoading(false);\n      }, 3000);\n    }\n\n    if (loading && !login) {\n      setTimeout(() => {\n        navigation.push('Profile', {\n          // mimic user object\n          user: {\n            username,\n            password,\n            userID: 1,\n            email,\n          },\n        });\n        setLoading(false);\n      }, 3000);\n    }\n  }, [loading]);\n\n  function loginOrRegister() {\n    // login form as a function called login\n    const loginForm = (\n      <>\n        <Input\n          placeholder=\"Username\"\n          onChange={(event) => setUsername(event.nativeEvent.text)}\n          leftIcon={(\n            <Icon\n              name=\"user\"\n              type=\"feather\"\n            />\n          )}\n        />\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          onChange={(event) => setPassword(event.nativeEvent.text)}\n          leftIcon={(\n            <Icon\n              name=\"lock\"\n              type=\"feather\"\n            />\n          )}\n        />\n      </>\n    );\n    // same as above but for register form\n    const registerForm = (\n      <>\n        <Input\n          placeholder=\"Username\"\n          onChange={(event) => setUsername(event.nativeEvent.text)}\n          leftIcon={(\n            <Icon\n              name=\"user\"\n              type=\"feather\"\n            />\n          )}\n        />\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          onChange={(event) => setPassword(event.nativeEvent.text)}\n          leftIcon={(\n            <Icon\n              name=\"lock\"\n              type=\"feather\"\n            />\n          )}\n        />\n        <Input\n          placeholder=\"Email\"\n          onChange={(event) => setEmail(event.nativeEvent.text)}\n          leftIcon={(\n            <Icon\n              name=\"mail\"\n              type=\"feather\"\n            />\n          )}\n        />\n      </>\n    );\n\n    return login ? loginForm : registerForm;\n  }\n\n  function handleButtonTitle() {\n    return login ? 'Log in' : 'Register';\n  }\n  function handleFormChange() {\n    // change a bit of state to trigger rerender and show other form\n    setLogin(!prevLogin);\n  }\n  function handleChangeFormText() {\n    // change text depending on form thats present\n    return login ? 'New User? Register here!' : 'Have an Account? Log in here!';\n  }\n  function handleLogin() {\n    // return null to exit function\n    if (username !== 'edwin') {\n      alert('wrong username');\n      return null;\n    }\n    if (password !== 'ramos') {\n      alert('wrong password');\n      return null;\n    }\n    setLoading(true);\n    return null;\n  }\n\n  // basic mock validations just for now\n  function handleRegister() {\n    // return null to exit function\n    if (username === 'edwin') {\n      alert('username is already taken');\n      return null;\n    }\n    if (email === 'edwinramos269@gmail.com') {\n      alert('email is already taken!');\n      return null;\n    }\n\n    setLoading(true);\n    return null;\n  }\n\n  function verifyCorrectFormFields() {\n    // return null to exit function\n    if (username === '') {\n      alert('Username can not be empty!');\n      return null;\n    }\n\n    if (password === '') {\n      alert('Password can not be empty');\n      return null;\n    }\n\n    if (!login) {\n      if (email === '') {\n        alert('Email can not be empty');\n        return null;\n      }\n    }\n\n    return login ? handleLogin() : handleRegister();\n  }\n\n  // const setModalVisible = (setting: boolean) => {\n  //     this.setState({\n  //         modalVisible: setting\n  //     }\n  //     // USE THIS GOBACK FUNCTION LATER WHEN WE MAKE AUTHFORM A MODAL COMPONENT\n  //     // ,()=>{\n  //     //     if(setting === false){\n  //     //         this.props.navigation.goBack()\n  //     //     }}\n  //     )\n  // }\n\n  function renderAuthForm() {\n    return (\n      <View style={styles.formContainer}>\n        <Text style={styles.headerText}>\n          {login ? 'Login' : 'Register'}\n        </Text>\n        {loginOrRegister()}\n        <Button\n          onPress={verifyCorrectFormFields}\n          style={styles.button}\n          title={handleButtonTitle()}\n        />\n        <Text onPress={handleFormChange}>\n          {handleChangeFormText()}\n        </Text>\n      </View>\n    );\n  }\n\n  function handleSettingsPress() {\n    setModalVisible(true);\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" />\n      <View>\n        {/* Type '{ visible: boolean; changeVisibility: Dispatch<SetStateAction<boolean>>; }'\n        is not assignable to type 'IntrinsicAttributes'.\n        Property 'visible' does not exist on type 'IntrinsicAttributes'.ts(2322).\n        Clearly the way i define it, modalVisible is a boolean.\n        Also it does work as intended.\n        */}\n        <InformationModal\n          visible={modalVisible}\n          changeVisibility={setModalVisible}\n        />\n        <TouchableOpacity style={{ position: 'absolute', left: 130 }}>\n          <Icon\n            name=\"info\"\n            type=\"feather\"\n            onPress={handleSettingsPress}\n          />\n        </TouchableOpacity>\n      </View>\n      { loading ? <ActivityIndicator style={styles.formContainer} size=\"large\" color=\"black\" /> : renderAuthForm()}\n    </SafeAreaView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}